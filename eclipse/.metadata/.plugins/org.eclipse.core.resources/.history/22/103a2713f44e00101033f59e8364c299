class PlotRenderer extends React.Component {

			      constructor(props) {
			        super(props);
			        this.state = {
			          times: props.times || [],
			          values: props.values || [],
			        }
			      }
			      

			      render() {
			        const style = {
			          width: "calc(30vw - 50px)",
			          height: "calc(30vh - 50px)",
			          margin: "20px",
			        };

			        const lineLayer = {
			          type: "line",
			          x: "_time",
			          y: "_value"
			        };

			        const table = Giraffe.newTable(this.state.times.length)
			          .addColumn('_time', 'dateTime:RFC3339', 'time', this.state.times)
			          .addColumn('_value', 'double', 'number', this.state.values);

			        const config = {
			          table,
			          layers: [lineLayer]
			        };

			        const SimplePlot = React.createElement(Giraffe.Plot, {config}, null);
			        return React.createElement('div', {style}, SimplePlot);
			      }
			    }

			    var data = {}
				
			    function addPoint(spec, timestamp, robustness){
			      if (!data[spec]) {
					data[spec] = {
						timestamps: [],
						values: []
					}
					updateNavbarWithSpecs();
				  }
				  
				  data[spec].timestamps.push(timestamp)
				  data[spec].values.push(robustness)
				  
				  
				  let e = document.getElementById(spec);
				  
				  if (!e) {
					e = document.createElement('div');
					e.style.boxShadow = "inset 0 0 0 4px grey";
					e.style.padding = "20px";
					e.style.backgroundColor = "#f5f5f5";
					e.id = spec;
					
					const container = document.getElementById('dashboards-view');
					if (container) {
						container.appendChild(e);
					}
				  }
				  			  
			      ReactDOM.render(
			        React.createElement(PlotRenderer, {times: data[spec].timestamps, values: data[spec].values}),
			          e
			        );
			    }
				
				window.addEventListener('DOMContentLoaded', () => {
				  const specNavbar = document.getElementById('spec-navbar');
				  const specContent = document.getElementById('spec-content');

				  let first = true;
				  for (const spec in data) {
				    // Create tab
				    const li = document.createElement('li');
				    li.className = 'nav-item';
				    li.role = 'presentation';

				    const button = document.createElement('button');
				    button.className = 'nav-link' + (first ? ' active' : '');
				    button.id = `${spec}-tab`;
				    button.dataset.bsToggle = 'tab';
				    button.dataset.bsTarget = `#${spec}-pane`;
				    button.type = 'button';
				    button.role = 'tab';
				    button.setAttribute('aria-controls', `${spec}-pane`);
				    button.setAttribute('aria-selected', first ? 'true' : 'false');
				    button.textContent = spec;

				    li.appendChild(button);
				    specNavbar.appendChild(li);

				    // Create tab content
				    const div = document.createElement('div');
				    div.className = 'tab-pane fade' + (first ? ' show active' : '');
				    div.id = `${spec}-pane`;
				    div.role = 'tabpanel';
				    div.setAttribute('aria-labelledby', `${spec}-tab`);
				    div.innerHTML = `<p>Content for <strong>${spec}</strong> goes here.</p>`;

				    specContent.appendChild(div);

				    first = false;
				  }
				});
				
				